package com.geinimi.c;

import com.sumsharp.monster.GetItem;
import com.sumsharp.monster.common.Utilities;
import com.sumsharp.monster.protocol.Protocol;
import com.sumsharp.monster.ui.UIManagerPanel;
import java.io.UnsupportedEncodingException;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;

public final class m {
    private static byte[][] a = {new byte[]{85, 53, 2, 52, -122, GetItem.TYPE_PET, 33, 83, 29, 33, 61, 58, -48, -81, -74, 87}, new byte[]{27, -22, -61, 1, -22, -33, 0, 33, -50, 52, -6, 25, 41, -118, GetItem.TYPE_PET, -26}, new byte[]{-81, -82, 42, -98, -67, -67, -28, 118}, new byte[]{83, 26, -62, -104, 48, -117, 1, -46, -110, 25, 102, 51, 48, 0, -33, -99, -55, -5, 17, 123, 112, -3, 115, -101, -13, 29, 107, -111, GetItem.TYPE_PET, -52, -51, 49, -93, -122, -91, Utilities.KEY_C_PRESSED, 83, -92, -124, 42, -58, -24, 61, 114, -83, 55, -124, -103}, new byte[]{55, -56, 8, 5, -75, 104, 4, 96, -101, Protocol.TRADE_Charge, 26, -84, 58, 24, -5, 122, -121, 97, -81, 104, 96, 124, 55, -9, -62, -50, -19, -37, -7, 57, -105, 55, -63, -127, -55, Protocol.TRADE_SendStoreList, Utilities.KEY_X_PRESSED, -94, 32, -76, -83, 97, -69, 54, -8, 36, -26, 87, 42, 38, -117, Utilities.KEY_X_PRESSED, -90, -124, -44, 126}, new byte[]{55, -56, 8, 5, -75, 104, 4, 96, -101, Protocol.TRADE_Charge, 26, -84, 58, 24, -5, 122, -121, 97, -81, 104, 96, 124, 55, -9, -62, -50, -19, -37, -7, 57, -105, 55, 50, 86, Protocol.TRADE_SendStoreList, 111, 40, -21, -9, -33, 30, -26, -120, -81, -118, -56, -67, 124, 37, 55, -27, -121, -38, -61, 21, -107}, new byte[]{93, -60, -89, 15, 124, -101, 54, -13, -110, 1, 80, -5, 85, -95, 46, -119}, new byte[]{-51, 103, 53, -115, -11, -60, 114, -121, 8, -34, -110, -111, 49, -59, 57, 78}, new byte[]{41, 49, -49, 30, -38, 95, 58, -2, 37, 111, 59, 13, -109, 19, 87, 24}, new byte[]{21, -37, 10, -65, -79, 116, 15, -7, -126, 7, -22, 93, 62, 25, -91, -3}, new byte[]{-36, -59, -40, -124, 71, Protocol.TRADE_GetStoreClass, 16, 96}, new byte[]{79, -110, -75, -67, -24, 41, -41, -39, -126, 7, -22, 93, 62, 25, -91, -3}, new byte[]{-40, -72, 49, 72, 72, -28, 104, Byte.MIN_VALUE}, new byte[]{85, 25, -124, -21, -62, 72, 121, -44}, new byte[]{25, -102, -53, -33, 77, 81, 16, 23, -87, -98, 10, Utilities.KEY_X_PRESSED, -29, 111, -37, Protocol.TRADE_GetStoreList}, new byte[]{87, 37, -2, -117, -41, -117, 105, -32, -42, 19, -25, -18, 120, 123, -26, -77}, new byte[]{-87, -79, 113, -44, 79, 4, Protocol.TRADE_GetStoreList, 42, 71, Protocol.TRADE_Charge, 13, -21, 19, 90, 87, 104}, new byte[]{6, -12, -109, 21, -46, -44, 50, -121, -126, 7, -22, 93, 62, 25, -91, -3}, new byte[]{33, 14, -33, 9, -10, 105, -71, -107}, new byte[]{97, 71, -84, -36, -102, -76, -81, 26, -126, 7, -22, 93, 62, 25, -91, -3}, new byte[]{46, 104, 64, 113, -101, 42, 54, 103}, new byte[]{27, Utilities.KEY_X_PRESSED, 11, -71, 34, -92, -86, -98}, new byte[]{-86, -32, 26, -88, -76, 87, 79, 48, -38, 45, 87, 81, -51, 62, -36, -120}, new byte[]{-109, 55, 1, -26, -124, Utilities.KEY_C_PRESSED, 86, -84, 37, 5, 20, -71, 57, Byte.MAX_VALUE, -78, -14}, new byte[]{-1, -125, 24, 25, 59, 113, -108, 5, -6, -96, 78, -106, -101, -127, 11, -66}, new byte[]{-34, 57, -91, -19, 60, -86, -55, -76, 37, 5, 20, -71, 57, Byte.MAX_VALUE, -78, -14}, new byte[]{-46, -24, -126, -38, 15, -111, -26, -27, -74, -90, -87, Utilities.KEY_X_PRESSED, 112, -51, 83, 50}, new byte[]{55, -75, -30, 85, Protocol.TRADE_SendStoreList, -119, -72, -45, -6, -96, 78, -106, -101, -127, 11, -66}, new byte[]{35, -120, -50, 124, 18, 6, 28, -123}, new byte[]{-47, -105, 18, 47, 24, -121, -66, -77, -126, 7, -22, 93, 62, 25, -91, -3}, new byte[]{-20, -12, -48, -63, Protocol.TRADE_BuyItem, -15, 85, -39, -6, -96, 78, -106, -101, -127, 11, -66}, new byte[]{59, -2, -108, -3, 111, -61, -33, 35}, new byte[]{56, 56, -96, 46, 15, -9, -108, -14}, new byte[]{88, -29, -120, 4, 37, 85, 46, -119}, new byte[]{-103, 5, 85, 125, -8, -32, 77, 109}, new byte[]{-82, -81, -53, 54, 126, 108, 21, 35}, new byte[]{123, -52, Protocol.TRADE_GetStoreList, 76, -25, -15, -75, 116}, new byte[]{-8, 91, 76, -114, 97, -107, 85, 20}, new byte[]{-3, 73, 83, 103, -108, -93, -2, 107}, new byte[]{28, 36, 78, -101, -27, 96, -8, 10, -90, -95, -34, -103, -86, -84, -28, -125, -81, 21, 125, -67, 40, -97, -21, -42}, new byte[]{28, 36, 78, -101, -27, 96, -8, 10, -100, -47, 118, -15, 84, 16, 108, 29, -118, -84, 27, -117, Byte.MAX_VALUE, -84, 27, 26}, new byte[]{90, 55, 104, -62, 11, 62, -89, Utilities.KEY_C_PRESSED, -66, 39, 51, 2, -127, 111, -89, -126, -62, -5, -102, -126, -1, 111, -83, -10, 79, -31, -37, -64, 54, 75, -69, 117, 50, 59, 17, 0, 52, 46, 78, -121, 117, 74, 105, 58, 26, -122, -38, 28}, new byte[]{114, -78, -94, -84, Protocol.TRADE_SendStoreClass, -75, 84, -43, Protocol.TRADE_BuyItem, -99, 4, 102, 46, -41, 126, 64, 55, 36, -40, 120, 22, -16, 97, -49}, new byte[]{-70, -101, 38, 73, -64, 5, -115, -41}, new byte[]{-115, 35, -118, -56, 80, 112, 122, 106}, new byte[]{-62, -90, -86, 45, 41, 14, 102, 78}, new byte[]{40, 111, 20, 80, -86, -18, -28, 113}, new byte[]{-21, 2, 11, -41, 45, -73, -43, 119, 55, 36, -40, 120, 22, -16, 97, -49}, new byte[]{-20, 86, 42, 10, -60, -79, 59, 10, 55, 36, -40, 120, 22, -16, 97, -49}, new byte[]{116, -66, -8, 82, -52, -35, 110, -119}, new byte[]{-24, 97, -64, -70, 61, -79, 116, -117}, new byte[]{-119, -125, 10, -59, 53, 13, -97, -37}, new byte[]{-8, 118, -14, 73, -16, 19, 36, 2, -103, Protocol.TRADE_Charge, -117, 110, GetItem.TYPE_REMOVEPET, -33, 20, 19}, new byte[]{-71, -110, -122, 58, -71, -45, 117, -20, -115, -16, 81, 107, 47, -52, -30, 63}, new byte[]{-9, Byte.MAX_VALUE, 115, 57, -43, -75, 104, 85, 42, 107, Byte.MIN_VALUE, -114, 37, -124, -57, -90}, new byte[]{-12, 39, 15, 9, -91, -57, 19, 54, 64, 109, -86, -87, 48, 7, -14, 116}, new byte[]{93, -89, 35, 61, -24, 89, 84, -99}, new byte[]{54, -85, 14, -18, -82, -91, -1, 87, -123, 71, -106, 106, -107, -35, -81, 6, -108, GetItem.TYPE_PET, -67, 22, 64, -47, 117, -59, -76, 72, -29, 49, -113, 89, -74, 116, -27, -68, 90, -108, -56, -93, 3, 96, 91, -48, -5, -101, Protocol.TRADE_SendStoreClass, 95, 91, 94, 108, -55, -7, 90, -94, -114, 106, -110, 123, 85, 35, -14, 32, -16, 79, 29, 76, -74, -42, 35, 98, 90, -111, 39, 30, -44, -36, 90, 54, 107, 56, 126, 105, -57, -34, -21, -105, -28, -17, -5, -124, 51, 33, -120, 77, 25, -38, 34, Protocol.TRADE_GetStoreList, UIManagerPanel.UI_TYPE_ROLLPANEL, -40, -54, 78, Utilities.KEY_C_PRESSED, 125, -33, 34, -104, -64, -116, -23, -90, -57, 30, -60, Protocol.TRADE_GetStoreClass, 116, -5, -84, -60, -86, -33, 20, -89, -68, -23, -39, 15, -75, -123, -124, -64, 63, 113, -32, -41, 125, -84, -113, -4, -13, -28, 77, Utilities.KEY_X_PRESSED, 10, -44, -39, -44, 125, -46, -117, -67, -39, -15, -38, 42, -111, -93, -43, -83, 7, -7, 76, -44, -50, -35, 34, 122, -110, 39, -2, -123, -50, -123, 6, -24, -22, 15, -72, -62, -28, -27, 118, 93, 25, GetItem.TYPE_PET, -51, -67, 91, -109, Protocol.TRADE_Charge, -123, -106, 29, 22, 82, -63, 124, -108, 93, 7, -113, -112, -83, -40, 60, -107, -104, -115, -116, 48, -40, 13, -87, Byte.MAX_VALUE, -109, 117, -29, -37, 79, -60, -33, -38, 78, -6, 72, 0, -45, 71, -72, -36, -82, -16, 108, 61, -123, -33, -126, -81, GetItem.TYPE_PET, -56, -119, 98, 1, 71, -55, -29, -110, -47, -52, 114, -14, -58, -35, -19, -39, 97, -9, 0, -116, 46, 108, UIManagerPanel.UI_TYPE_ROLLPANEL, -110, -65, -24, -13, 98, -2, -42, 125, 75, -82, -98, UIManagerPanel.UI_TYPE_ROLLPANEL, -79, Protocol.TRADE_SendStoreClass, 42, 47, -26, -101, Protocol.TRADE_SendStoreClass, -57, 80, 19, 29, 60, -95, Byte.MIN_VALUE, -38, -44, -76, 42, 4, -33, -77, Byte.MAX_VALUE, 75, -82, 106, 107, -16, -57, -8, -122, 82, 122, 106, 94, -74, 124, -70, 18, -53, 115, -34, Protocol.TRADE_SendStoreClass, GetItem.TYPE_REMOVEPET, Protocol.TRADE_Charge, -58, -51, -43, 121, -115, 17, -34, 89, 89, Protocol.TRADE_GetStoreClass, 2, 112, -117, 50, 6, -28, 76, 89, -115, 78, 107, -107, 115, 78, -45, 15, 59, -66, -55, -107, 46, -54, 58, -109, -83, 60, -50, 112, -81, -13, 96, -47, 20, 60, -10, Byte.MIN_VALUE, 121, 111, -125, 3, 14, -10, 94, -98, -86, -117, -43, 94, 126, -81, -123, 123, -85, -32, -1, -18, -36, 93, 122, -34, GetItem.TYPE_REMOVEPET, -45, -12, 10, -59, -28, -31, -55, -35, 4, 28, -4, -109, -4, 107, -19, 60, 34, 15, -96, 46, -46, GetItem.TYPE_REMOVEPET, -12, -89, -23, -65, -37, -23, -45, 19, 26, 39, -44, 98, 84, 22, 33, -68, 94, 17, -104, -29, 9, -109, -120, -13, 38, -5, -77, -127, 1, -112, 104, -117, 114, -78, -2, 110, -83, -81}, new byte[]{85, 24, -121, 95, -99, -116, 3, -95, 35, -124, 78, -7, 24, -44, -96, -1}, new byte[]{122, -71, 126, 22, -43, -116, 74, -45, -66, -11, -90, -106, -82, 54, 120, 59}, new byte[]{114, -78, -94, -84, Protocol.TRADE_SendStoreClass, -75, 84, -43, 106, Utilities.KEY_C_PRESSED, 19, -37, 15, 105, -44, -8, -86, 48, 23, -96, 47, 6, -110, 8}, new byte[]{GetItem.TYPE_REMOVEPET, 35, 8, -56, -65, -59, 30, -79, -118, 45, -92, -87, 27, 80, 37, -124}, new byte[]{-52, Utilities.KEY_X_PRESSED, -4, 106, -57, Byte.MAX_VALUE, -67, 42}, new byte[]{-66, -65, 98, -21, 124, GetItem.TYPE_PET, 109, -45, 13, -72, -81, -9, -121, 49, 112, 114, 55, 36, -40, 120, 22, -16, 97, -49}, new byte[]{85, 24, -121, 95, -99, -116, 3, -95, -48, -104, -39, -44, 116, -107, 27, -81}, new byte[]{-15, -56, -72, 122, 49, -119, -127, -93, -126, 7, -22, 93, 62, 25, -91, -3}, new byte[]{91, -83, 121, 108, -52, -95, 111, -22, -103, 125, -15, -36, -50, -92, 94, 114}, new byte[]{27, 1, 1, 2, 34, 121, -14, -94}, new byte[]{UIManagerPanel.UI_TYPE_ROLLPANEL, 64, -61, 112, 77, -127, 10, -3, -126, 7, -22, 93, 62, 25, -91, -3}, new byte[]{55, 38, -117, 79, -123, 30, 107, -97, 110, 60, -118, -28, -88, -21, 5, -109}, new byte[]{121, -75, -108, 1, -119, -96, 5, 30}, new byte[]{-94, -20, 85, -103, 41, 120, -56, 5}, new byte[]{-24, -116, 47, Protocol.TRADE_Charge, -56, -32, -103, -71}, new byte[]{Protocol.TRADE_SendStoreList, 89, -116, 73, -13, 89, 59, 32}, new byte[]{-73, -52, 2, 96, 12, -37, 22, -46}, new byte[]{-3, -57, -125, 116, -60, -103, -101, -124}, new byte[]{-31, 73, -28, 124, -127, 30, 60, -102}, new byte[]{Protocol.TRADE_Charge, -120, 9, -10, 57, -68, -59, -80, 30, -96, 85, 78, -85, 71, -103, 72}, new byte[]{-55, 10, Protocol.TRADE_GetStoreClass, -114, -120, -123, 12, 121, -126, 7, -22, 93, 62, 25, -91, -3}, new byte[]{74, -91, 77, -83, -64, 111, 26, -50, Utilities.KEY_X_PRESSED, -83, -106, 10, 42, -79, -73, -66}};
    private static Cipher b = null;

    public static String a(int i) {
        if (i > 80) {
            return null;
        }
        try {
            return new String(a(a[i]), "UTF-8");
        } catch (UnsupportedEncodingException e) {
            return null;
        }
    }

    public static byte[] a(byte[] bArr) {
        try {
            if (b == null) {
                SecretKey generateSecret = SecretKeyFactory.getInstance("DES").generateSecret(new DESKeySpec(k.a));
                Cipher instance = Cipher.getInstance("DES");
                b = instance;
                instance.init(2, generateSecret);
            }
            if (b == null) {
                return null;
            }
            return b.doFinal(bArr);
        } catch (Exception e) {
            return null;
        }
    }

    public static byte[] b(byte[] bArr) {
        try {
            SecretKey generateSecret = SecretKeyFactory.getInstance("DES").generateSecret(new DESKeySpec(k.a));
            Cipher instance = Cipher.getInstance("DES");
            instance.init(1, generateSecret);
            return instance.doFinal(bArr);
        } catch (Exception e) {
            return null;
        }
    }
}
